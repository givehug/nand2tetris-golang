// Class Ball

// Subroutine constructor new
function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0

// Let statement
push argument 0
pop this 0

// Let statement
push argument 1
pop this 1

// Let statement
push argument 2
pop this 10

// Let statement
push argument 3
push constant 6
sub
pop this 11

// Let statement
push argument 4
pop this 12

// Let statement
push argument 5
push constant 6
sub
pop this 13

// Let statement
push constant 0
pop this 14

// Do statement
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return

// Subroutine method dispose
function Ball.dispose 0
push argument 0
pop pointer 0

// Do statement
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return

// Subroutine method show
function Ball.show 0
push argument 0
pop pointer 0

// Do statement
push constant 1
neg
call Screen.setColor 1
pop temp 0

// Do statement
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

// Subroutine method hide
function Ball.hide 0
push argument 0
pop pointer 0

// Do statement
push constant 0
call Screen.setColor 1
pop temp 0

// Do statement
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

// Subroutine method draw
function Ball.draw 0
push argument 0
pop pointer 0

// Do statement
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return

// Subroutine method getLeft
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return

// Subroutine method getRight
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return

// Subroutine method setDestination
function Ball.setDestination 3
push argument 0
pop pointer 0

// Let statement
push argument 1
push this 0
sub
pop this 2

// Let statement
push argument 2
push this 1
sub
pop this 3

// Let statement
push this 2
call Math.abs 1
pop local 0

// Let statement
push this 3
call Math.abs 1
pop local 1

// Let statement
push local 0
push local 1
lt
pop this 7

// If statement
push this 7
not
if-goto Ball.if.1.L1

// Let statement
push local 0
pop local 2

// Let statement
push local 1
pop local 0

// Let statement
push local 2
pop local 1

// Let statement
push this 1
push argument 2
lt
pop this 8

// Let statement
push this 0
push argument 1
lt
pop this 9
goto Ball.if.1.L2
label Ball.if.1.L1

// Else statement

// Let statement
push this 0
push argument 1
lt
pop this 8

// Let statement
push this 1
push argument 2
lt
pop this 9
label Ball.if.1.L2

// Let statement
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4

// Let statement
push constant 2
push local 1
call Math.multiply 2
pop this 5

// Let statement
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return

// Subroutine method move
function Ball.move 0
push argument 0
pop pointer 0

// Do statement
push pointer 0
call Ball.hide 1
pop temp 0

// If statement
push this 4
push constant 0
lt
not
if-goto Ball.if.2.L1

// Let statement
push this 4
push this 5
add
pop this 4
goto Ball.if.2.L2
label Ball.if.2.L1

// Else statement

// Let statement
push this 4
push this 6
add
pop this 4

// If statement
push this 9
not
if-goto Ball.if.3.L1

// If statement
push this 7
not
if-goto Ball.if.4.L1

// Let statement
push this 0
push constant 4
add
pop this 0
goto Ball.if.4.L2
label Ball.if.4.L1

// Else statement

// Let statement
push this 1
push constant 4
add
pop this 1
label Ball.if.4.L2
goto Ball.if.3.L2
label Ball.if.3.L1

// Else statement

// If statement
push this 7
not
if-goto Ball.if.5.L1

// Let statement
push this 0
push constant 4
sub
pop this 0
goto Ball.if.5.L2
label Ball.if.5.L1

// Else statement

// Let statement
push this 1
push constant 4
sub
pop this 1
label Ball.if.5.L2
label Ball.if.3.L2
label Ball.if.2.L2

// If statement
push this 8
not
if-goto Ball.if.6.L1

// If statement
push this 7
not
if-goto Ball.if.7.L1

// Let statement
push this 1
push constant 4
add
pop this 1
goto Ball.if.7.L2
label Ball.if.7.L1

// Else statement

// Let statement
push this 0
push constant 4
add
pop this 0
label Ball.if.7.L2
goto Ball.if.6.L2
label Ball.if.6.L1

// Else statement

// If statement
push this 7
not
if-goto Ball.if.8.L1

// Let statement
push this 1
push constant 4
sub
pop this 1
goto Ball.if.8.L2
label Ball.if.8.L1

// Else statement

// Let statement
push this 0
push constant 4
sub
pop this 0
label Ball.if.8.L2
label Ball.if.6.L2

// If statement
push this 0
push this 10
gt
not
not
if-goto Ball.if.9.L1

// Let statement
push constant 1
pop this 14

// Let statement
push this 10
pop this 0
goto Ball.if.9.L2
label Ball.if.9.L1
label Ball.if.9.L2

// If statement
push this 0
push this 11
lt
not
not
if-goto Ball.if.10.L1

// Let statement
push constant 2
pop this 14

// Let statement
push this 11
pop this 0
goto Ball.if.10.L2
label Ball.if.10.L1
label Ball.if.10.L2

// If statement
push this 1
push this 12
gt
not
not
if-goto Ball.if.11.L1

// Let statement
push constant 3
pop this 14

// Let statement
push this 12
pop this 1
goto Ball.if.11.L2
label Ball.if.11.L1
label Ball.if.11.L2

// If statement
push this 1
push this 13
lt
not
not
if-goto Ball.if.12.L1

// Let statement
push constant 4
pop this 14

// Let statement
push this 13
pop this 1
goto Ball.if.12.L2
label Ball.if.12.L1
label Ball.if.12.L2

// Do statement
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return

// Subroutine method bounce
function Ball.bounce 5
push argument 0
pop pointer 0

// Let statement
push this 2
push constant 10
call Math.divide 2
pop local 2

// Let statement
push this 3
push constant 10
call Math.divide 2
pop local 3

// If statement
push argument 1
push constant 0
eq
not
if-goto Ball.if.13.L1

// Let statement
push constant 10
pop local 4
goto Ball.if.13.L2
label Ball.if.13.L1

// Else statement

// If statement
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto Ball.if.14.L1

// Let statement
push constant 20
pop local 4
goto Ball.if.14.L2
label Ball.if.14.L1

// Else statement

// Let statement
push constant 5
pop local 4
label Ball.if.14.L2
label Ball.if.13.L2

// If statement
push this 14
push constant 1
eq
not
if-goto Ball.if.15.L1

// Let statement
push constant 506
pop local 0

// Let statement
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1

// Let statement
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball.if.15.L2
label Ball.if.15.L1

// Else statement

// If statement
push this 14
push constant 2
eq
not
if-goto Ball.if.16.L1

// Let statement
push constant 0
pop local 0

// Let statement
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1

// Let statement
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto Ball.if.16.L2
label Ball.if.16.L1

// Else statement

// If statement
push this 14
push constant 3
eq
not
if-goto Ball.if.17.L1

// Let statement
push constant 250
pop local 1

// Let statement
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0

// Let statement
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto Ball.if.17.L2
label Ball.if.17.L1

// Else statement

// Let statement
push constant 0
pop local 1

// Let statement
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0

// Let statement
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label Ball.if.17.L2
label Ball.if.16.L2
label Ball.if.15.L2

// Do statement
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return